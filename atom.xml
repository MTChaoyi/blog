<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>梦天的小站</title>
  
  <subtitle>博客</subtitle>
  <link href="https://hexo.mtchaoyi.top/atom.xml" rel="self"/>
  
  <link href="https://hexo.mtchaoyi.top/"/>
  <updated>2023-02-08T19:14:05.642Z</updated>
  <id>https://hexo.mtchaoyi.top/</id>
  
  <author>
    <name>MTChaoyi</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>大三上期末考复习</title>
    <link href="https://hexo.mtchaoyi.top/2023/02/09/%E5%A4%A7%E4%B8%89%E4%B8%8A%E6%9C%9F%E6%9C%AB%E8%80%83%E5%A4%8D%E4%B9%A0/"/>
    <id>https://hexo.mtchaoyi.top/2023/02/09/%E5%A4%A7%E4%B8%89%E4%B8%8A%E6%9C%9F%E6%9C%AB%E8%80%83%E5%A4%8D%E4%B9%A0/</id>
    <published>2023-02-08T17:58:32.000Z</published>
    <updated>2023-02-08T19:14:05.642Z</updated>
    
    <content type="html"><![CDATA[<h2 id="考试时间表"><a href="#考试时间表" class="headerlink" title="考试时间表"></a>考试时间表</h2><div align=center><img src="https://cdn.jsdelivr.net/gh/MTChaoyi/Notes@master/学习/.pic/2023-02-09-02-00-05.png"/ loading="lazy"></div><h2 id="复习计划"><a href="#复习计划" class="headerlink" title="复习计划"></a>复习计划</h2><h3 id="2023-02-15-星期三"><a href="#2023-02-15-星期三" class="headerlink" title="2023-02-15 星期三"></a>2023-02-15 星期三</h3><h4 id="数据挖掘与分析-2"><a href="#数据挖掘与分析-2" class="headerlink" title="数据挖掘与分析 (2)"></a>数据挖掘与分析 (2)</h4><blockquote><p>09:30~11:30</p></blockquote><ul><li>复习资料 <code>PPT</code></li></ul><h4 id="计算机网络A-3"><a href="#计算机网络A-3" class="headerlink" title="计算机网络A (3)"></a>计算机网络A (3)</h4><blockquote><p>13:00~15:00</p></blockquote><ul><li>复习资料<div align=center><img src="https://cdn.jsdelivr.net/gh/MTChaoyi/Notes@master/学习/.pic/2023-02-09-02-38-46.png" width = 45%/ loading="lazy"><img src="https://cdn.jsdelivr.net/gh/MTChaoyi/Notes@master/学习/.pic/2023-02-09-02-41-32.png" width = 45%/ loading="lazy"></div></li></ul><h4 id="数据库应用技术-2-5"><a href="#数据库应用技术-2-5" class="headerlink" title="数据库应用技术 (2.5)"></a>数据库应用技术 (2.5)</h4><blockquote><p>18:30~20:30</p></blockquote><ul><li>复习资料 <code>PPT</code></li></ul><h3 id="2023-02-16-星期四"><a href="#2023-02-16-星期四" class="headerlink" title="2023-02-16 星期四"></a>2023-02-16 星期四</h3><h4 id="离散结构B-3"><a href="#离散结构B-3" class="headerlink" title="离散结构B (3)"></a>离散结构B (3)</h4><blockquote><p>09:30~11:30</p></blockquote><ul><li>复习资料 <code>PPT</code> <code>课本</code></li></ul><h4 id="文本数据挖掘-2"><a href="#文本数据挖掘-2" class="headerlink" title="文本数据挖掘 (2)"></a>文本数据挖掘 (2)</h4><blockquote><p>13:00~15:00</p></blockquote><ul><li>复习资料 <code>PPT</code></li></ul><h4 id="自然语言处理-2"><a href="#自然语言处理-2" class="headerlink" title="自然语言处理 (2)"></a>自然语言处理 (2)</h4><blockquote><p>18:30~20:30</p></blockquote><ul><li>复习资料<div align=center><img src="https://cdn.jsdelivr.net/gh/MTChaoyi/Notes@master/学习/.pic/2023-02-09-02-44-12.png" width = 80%/ loading="lazy"></div></li></ul><h3 id="2023-02-17-星期五"><a href="#2023-02-17-星期五" class="headerlink" title="2023-02-17 星期五"></a>2023-02-17 星期五</h3><h4 id="图像处理技术-2"><a href="#图像处理技术-2" class="headerlink" title="图像处理技术 (2)"></a>图像处理技术 (2)</h4><blockquote><p>09:30~11:30</p></blockquote><ul><li>复习资料 <code>PPT</code> <code>复印的题库</code></li></ul><h4 id="图像分析方法-2"><a href="#图像分析方法-2" class="headerlink" title="图像分析方法 (2)"></a>图像分析方法 (2)</h4><blockquote><p>16:00~18:00</p></blockquote><ul><li>复习资料 <code>PPT</code></li></ul><h3 id="2023-02-18-星期六"><a href="#2023-02-18-星期六" class="headerlink" title="2023-02-18 星期六"></a>2023-02-18 星期六</h3><h4 id="毛概-3"><a href="#毛概-3" class="headerlink" title="毛概 (3)"></a>毛概 (3)</h4><blockquote><p>14:30~16:30</p></blockquote><ul><li>复习资料 <code>课本</code></li></ul>]]></content>
    
    
    <summary type="html">大三上期末考复习计划</summary>
    
    
    
    <category term="学习" scheme="https://hexo.mtchaoyi.top/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="期末考" scheme="https://hexo.mtchaoyi.top/tags/%E6%9C%9F%E6%9C%AB%E8%80%83/"/>
    
    <category term="复习" scheme="https://hexo.mtchaoyi.top/tags/%E5%A4%8D%E4%B9%A0/"/>
    
    <category term="大三上" scheme="https://hexo.mtchaoyi.top/tags/%E5%A4%A7%E4%B8%89%E4%B8%8A/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://hexo.mtchaoyi.top/2023/02/06/hello-world/"/>
    <id>https://hexo.mtchaoyi.top/2023/02/06/hello-world/</id>
    <published>2023-02-06T11:20:33.025Z</published>
    <updated>2023-02-06T11:20:33.026Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class="language-bash" data-language="bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class="language-bash" data-language="bash"><code class="language-bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class="language-bash" data-language="bash"><code class="language-bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class="language-bash" data-language="bash"><code class="language-bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Ubuntu服务器之Docker</title>
    <link href="https://hexo.mtchaoyi.top/2023/02/03/Ubuntu%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B9%8BDocker/"/>
    <id>https://hexo.mtchaoyi.top/2023/02/03/Ubuntu%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B9%8BDocker/</id>
    <published>2023-02-02T17:30:37.000Z</published>
    <updated>2023-02-06T13:41:21.779Z</updated>
    
    <content type="html"><![CDATA[<hr><h1 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h1><ul><li><a href="#%E7%9B%AE%E5%BD%95">目录</a></li><li><a href="#%E5%AE%89%E8%A3%85docker%E7%8E%AF%E5%A2%83">安装Docker环境</a></li><li><a href="#%E5%B8%B8%E7%94%A8docker%E6%93%8D%E4%BD%9C">常用Docker操作</a><ul><li><a href="#%E9%95%9C%E5%83%8F%E5%AF%BC%E5%85%A5%E5%AF%BC%E5%87%BA">镜像导入&#x2F;导出</a></li><li><a href="#%E6%9B%B4%E6%94%B9%E9%95%9C%E5%83%8F%E5%82%A8%E5%AD%98%E4%BD%8D%E7%BD%AE">更改镜像储存位置</a></li></ul></li><li><a href="#docker%E5%BA%94%E7%94%A8">Docker应用</a><ul><li><a href="#%E9%9D%92%E9%BE%99%E9%9D%A2%E6%9D%BF%E8%87%AA%E5%8A%A8%E5%8C%96%E5%8A%A9%E6%89%8B">青龙面板(自动化助手)</a><ul><li><a href="#%E9%9D%92%E9%BE%99%E9%9D%A2%E6%9D%BF%E5%9F%BA%E7%A1%80%E5%91%BD%E4%BB%A4">青龙面板基础命令</a></li><li><a href="#%E9%83%A8%E7%BD%B2bilibilitool-b%E7%AB%99%E8%87%AA%E5%8A%A8%E4%BB%BB%E5%8A%A1%E5%B7%A5%E5%85%B7">部署BiliBiliTool (B站自动任务工具)</a></li></ul></li><li><a href="#qbittorrent-%E7%A3%81%E9%93%BE%E4%B8%8B%E8%BD%BD">qbittorrent (磁链下载)</a></li><li><a href="#bitwarden-%E5%AF%86%E7%A0%81%E7%AE%A1%E7%90%86%E5%99%A8">bitwarden (密码管理器)</a></li><li><a href="#yesplaymusic-%E9%AB%98%E9%A2%9C%E5%80%BC%E7%9A%84%E7%AC%AC%E4%B8%89%E6%96%B9%E7%BD%91%E6%98%93%E4%BA%91%E6%92%AD%E6%94%BE%E5%99%A8">YesPlayMusic (高颜值的第三方网易云播放器)</a></li><li><a href="#reader-%E9%98%85%E8%AF%BB%E7%BD%91%E9%A1%B5%E7%89%88">reader (阅读网页版)</a></li></ul></li></ul><hr><h1 id="安装Docker环境"><a href="#安装Docker环境" class="headerlink" title="安装Docker环境"></a>安装Docker环境</h1><ul><li><p>更新软件包索引，并且安装必要的依赖软件，来添加一个新的 HTTPS 软件源</p><pre class="language-none"><code class="language-none">sudo apt updatesudo apt install apt-transport-https ca-certificates curl gnupg-agent software-properties-common</code></pre></li><li><p>使用下面的 curl 导入源仓库的 GPG key：</p><pre class="language-none"><code class="language-none">curl -fsSL https:&#x2F;&#x2F;download.docker.com&#x2F;linux&#x2F;ubuntu&#x2F;gpg | sudo apt-key add -</code></pre></li><li><p>将 Docker APT 软件源添加到你的系统：</p><pre class="language-none"><code class="language-none">sudo add-apt-repository &quot;deb [arch&#x3D;amd64] https:&#x2F;&#x2F;download.docker.com&#x2F;linux&#x2F;ubuntu $(lsb_release -cs) stable&quot;</code></pre></li><li><p>现在，Docker 软件源被启用了，你可以安装软件源中任何可用的 Docker 版本。</p></li><li><p>想要安装 Docker 最新版本，运行下面的命令。</p><pre class="language-none"><code class="language-none">sudo apt updatesudo apt install docker-ce docker-ce-cli containerd.io</code></pre></li><li><p>运行<code>sudo apt update</code>可能会有<code>Warning</code><br>解决方法参考<a href="https://blog.csdn.net/jiang_huixin/article/details/127186567">ubuntu 22.04 修复 key is stored in legacy trusted.gpg keyring</a></p></li><li><p>以非 Root 用户身份执行 Docker</p><pre class="language-none"><code class="language-none">sudo usermod -aG docker $USER</code></pre></li></ul><h1 id="常用Docker操作"><a href="#常用Docker操作" class="headerlink" title="常用Docker操作"></a>常用Docker操作</h1><h2 id="镜像导入-x2F-导出"><a href="#镜像导入-x2F-导出" class="headerlink" title="镜像导入&#x2F;导出"></a>镜像导入&#x2F;导出</h2><ul><li><p>查看宿主机所有镜像</p><pre class="language-none"><code class="language-none">docker images</code></pre><div align=center><img src="https://cdn.jsdelivr.net/gh/MTChaoyi/Blog-Hexo@main/source/_posts/.pic/2023-02-03-12-41-29.png" width = 80%/ loading="lazy"></div></li><li><p>使用<code>save</code>命令，通过镜像id导出镜像到宿主机当前文件夹下</p><pre class="language-none"><code class="language-none">docker save -o qinglong.tar whyour&#x2F;qinglong:latest</code></pre><div align=center><img src="https://cdn.jsdelivr.net/gh/MTChaoyi/Blog-Hexo@main/source/_posts/.pic/2023-02-03-12-45-36.png" width = 80%/ loading="lazy"></div></li><li><p>执行以下命令进行镜像导入</p><pre class="language-none"><code class="language-none">docker load &lt; qinglong.tar</code></pre></li></ul><h2 id="更改镜像储存位置"><a href="#更改镜像储存位置" class="headerlink" title="更改镜像储存位置"></a>更改镜像储存位置</h2><ul><li>默认情况下 Docker 容器的存放位置在<code>/var/lib/docker</code>目录下面</li><li>可以通过下面命令查看具体位置<pre class="language-none"><code class="language-none">sudo docker info | grep &quot;Docker Root Dir&quot;</code></pre></li><li>解决默认存储容量不足的情况，最直接且最有效的方法就是挂载新的分区到该目录。但是在原有系统空间不变的情况下，所以采用软链接的方式，修改镜像和容器的存放路径达到同样的目的。<pre class="language-none"><code class="language-none"># 停掉Docker服务$ systemctl restart docker# 停掉Docker服务$ service docker stop</code></pre></li><li>然后移动整个<code>/var/lib/docker</code>目录到空间不较大的目的路径。这时候启动 <code>Docker</code> 时发现存储目录依旧是 <code>/var/lib/docker</code> 目录，但是实际上是存储在数据盘 <code>/data/docker</code> 上了<pre class="language-none"><code class="language-none"># 移动原有的内容$ mv &#x2F;var&#x2F;lib&#x2F;docker &#x2F;data&#x2F;docker# 进行链接$ ln -sf &#x2F;data&#x2F;docker &#x2F;var&#x2F;lib&#x2F;docker</code></pre></li></ul><h1 id="Docker应用"><a href="#Docker应用" class="headerlink" title="Docker应用"></a>Docker应用</h1><h2 id="青龙面板-自动化助手"><a href="#青龙面板-自动化助手" class="headerlink" title="青龙面板(自动化助手)"></a>青龙面板(自动化助手)</h2><ol><li><p>在dockers官方镜像列表中拉取最新版的青龙镜像</p>  <pre class="language-none"><code class="language-none">docker pull whyour&#x2F;qinglong:latest</code></pre></li><li><p>创建青龙面板容器，容器名qinglong文件夹名ql 端口5700</p>  <pre class="language-none"><code class="language-none"># 复制下列命令在ssh执行(先安装docker)# 注:$PWD请修改为实际你想安装的路径不想修改的，直接复制docker run -dit \  -v $PWD&#x2F;ql&#x2F;config:&#x2F;ql&#x2F;config \  -v $PWD&#x2F;ql&#x2F;log:&#x2F;ql&#x2F;log \  -v $PWD&#x2F;ql&#x2F;db:&#x2F;ql&#x2F;db \  -v $PWD&#x2F;ql&#x2F;repo:&#x2F;ql&#x2F;repo \  -v $PWD&#x2F;ql&#x2F;raw:&#x2F;ql&#x2F;raw \  -v $PWD&#x2F;ql&#x2F;scripts:&#x2F;ql&#x2F;scripts \  -v $PWD&#x2F;ql&#x2F;jbot:&#x2F;ql&#x2F;jbot \  -p 5700:5700 \  --name qinglong \  --hostname qinglong \  --restart unless-stopped \  whyour&#x2F;qinglong:latest</code></pre></li><li><p>访问http:&#x2F;&#x2F;服务器IP:5700进行面板配置</p></li><li><p>如果没有进入配置向导，请在SSH终端下执行如下命令查看账号及密码</p>  <pre class="language-none"><code class="language-none">docker exec -it qinglong cat &#x2F;ql&#x2F;config&#x2F;auth.json</code></pre></li></ol><h3 id="青龙面板基础命令"><a href="#青龙面板基础命令" class="headerlink" title="青龙面板基础命令"></a>青龙面板基础命令</h3>  <pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#重启青龙容器</span><span class="token function">docker</span> restart 你的容器名<span class="token comment">#更新青龙</span><span class="token function">docker</span> <span class="token builtin class-name">exec</span> <span class="token parameter variable">-it</span> qinglong ql update<span class="token comment">#更新青龙并编译</span><span class="token function">docker</span> <span class="token builtin class-name">exec</span> <span class="token parameter variable">-it</span> qinglong ql restart<span class="token comment">#拉取自定义仓库</span><span class="token function">docker</span> <span class="token builtin class-name">exec</span> <span class="token parameter variable">-it</span> qinglong ql repo https://ghproxy.com/https://github.com/whyour/hundun.git <span class="token string">"quanx"</span> <span class="token string">"tokens|caiyun|didi|donate|fold|Env"</span><span class="token comment">#拉取单个脚本</span><span class="token function">docker</span> <span class="token builtin class-name">exec</span> <span class="token parameter variable">-it</span> qinglong ql raw https://ghproxy.com/https://raw.githubusercontent.com/moposmall/Script/main/Me/jx_cfd.js<span class="token comment">#删除7天前的所有日志</span><span class="token function">docker</span> <span class="token builtin class-name">exec</span> <span class="token parameter variable">-it</span> qinglong ql rmlog <span class="token number">7</span><span class="token comment">#启动bot</span><span class="token function">docker</span> <span class="token builtin class-name">exec</span> <span class="token parameter variable">-it</span> qinglong ql bot<span class="token comment">#导出互助码</span><span class="token function">docker</span> <span class="token builtin class-name">exec</span> <span class="token parameter variable">-it</span> qinglong ql code<span class="token comment">#通知测试</span><span class="token function">docker</span> <span class="token builtin class-name">exec</span> <span class="token parameter variable">-it</span> qinglong notify <span class="token builtin class-name">test</span> <span class="token builtin class-name">test</span><span class="token comment">#立即执行脚本</span><span class="token function">docker</span> <span class="token builtin class-name">exec</span> <span class="token parameter variable">-it</span> qinglong task test.js now<span class="token comment">#并行执行脚本</span><span class="token function">docker</span> <span class="token builtin class-name">exec</span> <span class="token parameter variable">-it</span> qinglong task test.js conc</code></pre><h3 id="部署BiliBiliTool-B站自动任务工具"><a href="#部署BiliBiliTool-B站自动任务工具" class="headerlink" title="部署BiliBiliTool (B站自动任务工具)"></a>部署BiliBiliTool (B站自动任务工具)</h3><ul><li><a href="https://github.com/RayWangQvQ/BiliBiliToolPro">BiliBiliTool项目地址</a></li></ul><ol><li><p>安装 dotnet 环境<br>  编辑青龙的 extra.sh 文件，添加如下指令：</p>  <pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 安装 dotnet 环境</span><span class="token function">curl</span> <span class="token parameter variable">-sSL</span> https://ghproxy.com/https://raw.githubusercontent.com/RayWangQvQ/BiliBiliToolPro/main/qinglong/ray-dotnet-install.sh <span class="token operator">|</span> <span class="token function">bash</span> /dev/stdin --no-official</code></pre><div align=center><img src="https://cdn.jsdelivr.net/gh/MTChaoyi/Blog-Hexo@main/source/_posts/.pic/2023-02-03-15-40-53.png" width = 80%/ loading="lazy"></div></li><li><p>重启青龙容器，或在宿主机中执行<code>docker exec -it qinglong bash /ql/data/config/extra.sh</code>，其中<code>qinglong</code>是你的容器名</p></li><li><p>登录青龙面板并修改配置<br>  青龙面板，<code>配置文件</code>页。<br>  修改 <code>RepoFileExtensions=&quot;js py&quot;</code> 为 <code>RepoFileExtensions=&quot;js py sh&quot;</code><br>  保存配置。</p><div align=center><img src="https://cdn.jsdelivr.net/gh/MTChaoyi/Blog-Hexo@main/source/_posts/.pic/2023-02-03-15-49-09.png" width = 80%/ loading="lazy"></div></li><li><p>在青龙面板中添加拉库定时任务<br>  订阅管理(没提到的不要动)</p>  <pre class="language-none"><code class="language-none">名称：Bilibili类型：公开仓库链接：https:&#x2F;&#x2F;github.com&#x2F;RayWangQvQ&#x2F;BiliBiliToolPro.git定时类型：crontab定时规则：2 2 28 * *白名单：bili_task_.+\.sh文件后缀：sh</code></pre><p>  保存后，点击运行按钮，运行拉库。</p></li><li><p>在青龙定时任务中，点击运行<code>bili扫码登录</code>任务，查看运行日志，扫描日志中的二维码进行登录。<br>  登录成功后，会将cookie保存到青龙的环境变量中</p><div align=center><img src="https://cdn.jsdelivr.net/gh/MTChaoyi/Blog-Hexo@main/source/_posts/.pic/2023-02-03-15-53-06.png" width = 80%/ loading="lazy"></div></li><li><p>拉库时，如果服务器在国内，访问GitHub速度慢，可以在仓库地址前加上 <code>https://ghproxy.com/</code> 进行加速, 如：<code>ql repo https://ghproxy.com/https://github.com/RayWangQvQ/BiliBiliToolPro.git &quot;bili_task_&quot;</code></p></li><li><p>在<code>环境变量</code>中自定义配置</p></li></ol><ul><li>是否跳过执行任务<br>用于特殊情况下，通过配置灵活的开启和关闭整个应用.<table><thead><tr><th>TITLE</th><th>CONTENT</th></tr></thead><tbody><tr><td>值域</td><td>[true,false]</td></tr><tr><td>默认值</td><td>false</td></tr><tr><td>环境变量</td><td><code>Ray_Security__IsSkipDailyTask</code></td></tr></tbody></table></li><li>请求B站接口时头部传递的User-Agent<table><thead><tr><th>TITLE</th><th>CONTENT</th></tr></thead><tbody><tr><td>值域</td><td>字符串，可以F12从自己的浏览器获取</td></tr><tr><td>默认值</td><td>Mozilla&#x2F;5.0 (Macintosh; Intel Mac OS X 10_15_3) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Chrome&#x2F;87.0.4280.66 Safari&#x2F;537.36 Edg&#x2F;87.0.664.41</td></tr><tr><td>环境变量</td><td><code>Ray_Security__UserAgent</code></td></tr></tbody></table></li><li>是否开启观看视频任务<table><thead><tr><th>TITLE</th><th>CONTENT</th></tr></thead><tbody><tr><td>值域</td><td>[true,false]</td></tr><tr><td>默认值</td><td>true</td></tr><tr><td>环境变量</td><td><code>Ray_DailyTaskConfig__IsWatchVideo</code></td></tr></tbody></table></li><li>是否开启分享视频任务<table><thead><tr><th>TITLE</th><th>CONTENT</th></tr></thead><tbody><tr><td>值域</td><td>[true,false]</td></tr><tr><td>默认值</td><td>true</td></tr><tr><td>环境变量</td><td><code>Ray_DailyTaskConfig__IsShareVideo</code></td></tr></tbody></table></li><li>每日投币数量<table><thead><tr><th>TITLE</th><th>CONTENT</th></tr></thead><tbody><tr><td>值域</td><td>[0,5]，为安全考虑，程序内部还会做验证，最大不能超过5</td></tr><tr><td>默认值</td><td>5</td></tr><tr><td>环境变量</td><td><code>Ray_DailyTaskConfig__NumberOfCoins</code></td></tr></tbody></table></li><li>投币时是否同时点赞<table><thead><tr><th>TITLE</th><th>CONTENT</th></tr></thead><tbody><tr><td>值域</td><td>[true,false]</td></tr><tr><td>默认值</td><td>false</td></tr><tr><td>环境变量</td><td><code>Ray_DailyTaskConfig__SelectLike</code></td></tr></tbody></table></li><li>每月几号自动充电<br>使用大会员免费赠送的B币券自动充电，如不使用，每个月结束会自动失效。没有B币券或B币券余额不足2，不会进行充电。<table><thead><tr><th>TITLE</th><th>CONTENT</th></tr></thead><tbody><tr><td>值域</td><td>[-1,31]，-1表示不指定，默认月底最后一天；0表示不充电</td></tr><tr><td>默认值</td><td>-1</td></tr><tr><td>环境变量</td><td><code>Ray_DailyTaskConfig__DayOfAutoCharge</code></td></tr></tbody></table></li><li>每月几号自动领取会员权益<table><thead><tr><th>TITLE</th><th>CONTENT</th></tr></thead><tbody><tr><td>值域</td><td>[-1,31]，-1表示不指定，默认每月1号；0表示不领取</td></tr><tr><td>默认值</td><td>1</td></tr><tr><td>环境变量</td><td><code>Ray_DailyTaskConfig__DayOfReceiveVipPrivilege</code></td></tr></tbody></table></li><li>每月几号进行直播中心银瓜子兑换硬币<table><thead><tr><th>TITLE</th><th>CONTENT</th></tr></thead><tbody><tr><td>值域</td><td>[-1,31]，-1表示不指定，默认每月最后一天；-2表示每天；0表示不进行兑换</td></tr><tr><td>默认值</td><td>-1</td></tr><tr><td>环境变量</td><td><code>Ray_DailyTaskConfig__DayOfExchangeSilver2Coin</code></td></tr></tbody></table></li><li>Lv6后开启硬币白嫖模式<table><thead><tr><th>TITLE</th><th>CONTENT</th></tr></thead><tbody><tr><td>值域</td><td>[true,false]，true表示开启，Lv6的账号不会投币</td></tr><tr><td>默认值</td><td>false</td></tr><tr><td>环境变量</td><td><code>Ray_DailyTaskConfig__SaveCoinsWhenLv6</code></td></tr></tbody></table></li><li>推送通知到<a href="http://www.pushplus.plus/">PushPlus</a><table><thead><tr><th>TITLE</th><th>CONTENT</th></tr></thead><tbody><tr><td>值域</td><td>一串字符串</td></tr><tr><td>默认值</td><td>空</td></tr><tr><td>环境变量</td><td><code>Ray_Serilog__WriteTo__9__Args__token</code></td></tr></tbody></table></li></ul><h2 id="qbittorrent-磁链下载"><a href="#qbittorrent-磁链下载" class="headerlink" title="qbittorrent (磁链下载)"></a>qbittorrent (磁链下载)</h2><ol><li>拉取镜像(4.4.3以上版本可能有bug)  <pre class="language-none"><code class="language-none">docker pull linuxserver&#x2F;qbittorrent:4.4.3</code></pre></li><li>创建对应目录并编写 Docker-Compose 文件  <pre class="language-none"><code class="language-none">cd ~&#x2F;Dockermkdir qBittorrent #创建qbitorrent数据文件夹cd qBittorrentmkdir config downloads #创建配置文件目录与下载目录vim docker-compose.yml #创建并编辑文件</code></pre></li><li>vim复制如下内容并按需修改  <pre class="language-none"><code class="language-none">version: &quot;2&quot;services:  qbittorrent:    image: linuxserver&#x2F;qbittorrent:4.4.3    container_name: qbittorrent    environment:      - PUID&#x3D;1000      - PGID&#x3D;1000      - TZ&#x3D;Asia&#x2F;Shanghai # 你的时区      - UMASK_SET&#x3D;022      - WEBUI_PORT&#x3D;8081 # 将此处修改成你欲使用的 WEB 管理平台端口    volumes:      - &#x2F;home&#x2F;mtchaoyi&#x2F;Docker&#x2F;qBittorrent&#x2F;config:&#x2F;config # 绝对路径请修改为自己的config文件夹      - &#x2F;home&#x2F;mtchaoyi&#x2F;sda1&#x2F;qBittorrent:&#x2F;downloads # 绝对路径请修改为自己的downloads文件夹    ports:      # 要使用的映射下载端口与内部下载端口，可保持默认，安装完成后在管理页面仍然可以改成其他端口。      - 6881:6881      - 6881:6881&#x2F;udp      # 此处WEB UI 目标端口与内部端口务必保证相同，见问题1      - 8081:8081    restart: unless-stopped</code></pre></li><li>执行docker-compose  <pre class="language-none"><code class="language-none">docker-compose up -d</code></pre></li><li>执行后，如果得法，访问<code>ip:web-ui-port</code>即可进入管理页面。默认用户名密码<code>admin</code> <code>adminadmin</code></li></ol><h2 id="bitwarden-密码管理器"><a href="#bitwarden-密码管理器" class="headerlink" title="bitwarden (密码管理器)"></a>bitwarden (密码管理器)</h2><ol><li>拉取镜像(使用大佬改的vaultwarden)  <pre class="language-none"><code class="language-none">docker pull vaultwarden&#x2F;server</code></pre></li><li>创建对应目录  <pre class="language-none"><code class="language-none">cd ~&#x2F;Dockermkdir vaultwarden #创建vaultwarden数据文件夹</code></pre></li><li>按需修改执行  <pre class="language-none"><code class="language-none">docker run -d \--name&#x3D;bitwarden_rs \-e WEBSOCKET_ENABLED&#x3D;true \-e LOG_FILE&#x3D;&#x2F;data&#x2F;bitwarden.log \-p 3011:80 -p 3012:3012 \-v ~&#x2F;Docker&#x2F;vaultwarden&#x2F;:&#x2F;data&#x2F; \--restart&#x3D;always \vaultwarden&#x2F;server:latest</code></pre><blockquote><p>注：<br> –name&#x3D;你想要在docker里面显示的名字(可选，方便后续管理)<br> 80和3012的设置端口不能冲突<br> –restart&#x3D;always 自动重启</p></blockquote></li></ol><h2 id="YesPlayMusic-高颜值的第三方网易云播放器"><a href="#YesPlayMusic-高颜值的第三方网易云播放器" class="headerlink" title="YesPlayMusic (高颜值的第三方网易云播放器)"></a>YesPlayMusic (高颜值的第三方网易云播放器)</h2><blockquote><p>项目地址 <a href="https://github.com/qier222/YesPlayMusic">qier222&#x2F;YesPlayMusic</a></p></blockquote><ol><li>克隆代码仓库  <pre class="language-none"><code class="language-none">git clone https:&#x2F;&#x2F;github.com&#x2F;qier222&#x2F;YesPlayMusic.git</code></pre></li><li>进入目录  <pre class="language-none"><code class="language-none">cd YesPlayMusic</code></pre></li><li>构建Docker镜像 (构建时间看服务器性能)  <pre class="language-none"><code class="language-none">docker build -t yesplaymusic .</code></pre></li><li>启动Docker容器  <pre class="language-none"><code class="language-none">docker run -d --name YesPlayMusic -p 3000:80 yesplaymusic</code></pre><blockquote><p>注：<br>构建过久或失败 可使用他人构建好的镜像</p></blockquote><pre class="language-none"><code class="language-none"># 拉取镜像docker pull fogforest&#x2F;yesplaymusic# 启动Docker容器docker run -d --name yesplaymusic -p 3000:80 fogforest&#x2F;yesplaymusic</code></pre></li></ol><h2 id="reader-阅读网页版"><a href="#reader-阅读网页版" class="headerlink" title="reader (阅读网页版)"></a>reader (阅读网页版)</h2><blockquote><p>项目地址 <a href="https://github.com/hectorqin/reader">hectorqin&#x2F;reader</a></p></blockquote><ol><li><p>下载项目里的 docker-compose.yaml</p>  <pre class="language-none"><code class="language-none">wget https:&#x2F;&#x2F;ghproxy.com&#x2F;https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;hectorqin&#x2F;reader&#x2F;master&#x2F;docker-compose.yaml</code></pre></li><li><p>根据 docker-compose.yaml 里面的注释编辑所需配置</p>  <pre class="language-none"><code class="language-none">vim docker-compose.yaml</code></pre></li><li><p>启动 docker-compose</p>  <pre class="language-none"><code class="language-none">docker-compose up -d</code></pre></li></ol><ul><li>书源地址 <a href="https://legado.pages.dev/">https://legado.pages.dev</a></li></ul>]]></content>
    
    
    <summary type="html">Ubuntu服务器配置Docker环境</summary>
    
    
    
    <category term="一点小教程" scheme="https://hexo.mtchaoyi.top/categories/%E4%B8%80%E7%82%B9%E5%B0%8F%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="Ubuntu" scheme="https://hexo.mtchaoyi.top/tags/Ubuntu/"/>
    
    <category term="服务器" scheme="https://hexo.mtchaoyi.top/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
    <category term="Docker" scheme="https://hexo.mtchaoyi.top/tags/Docker/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu服务器之网站</title>
    <link href="https://hexo.mtchaoyi.top/2022/11/18/Ubuntu%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B9%8B%E7%BD%91%E7%AB%99/"/>
    <id>https://hexo.mtchaoyi.top/2022/11/18/Ubuntu%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B9%8B%E7%BD%91%E7%AB%99/</id>
    <published>2022-11-18T13:59:44.000Z</published>
    <updated>2023-02-06T13:08:36.913Z</updated>
    
    <content type="html"><![CDATA[<hr><h1 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h1><ul><li><a href="#%E7%9B%AE%E5%BD%95">目录</a></li><li><a href="#%E8%87%AA%E6%90%AD%E8%BF%90%E8%A1%8C%E7%8E%AF%E5%A2%83---tomcat">自搭运行环境 - Tomcat</a><ul><li><a href="#step1---%E5%AE%89%E8%A3%85java%E7%8E%AF%E5%A2%83">Step1 - 安装java环境</a></li><li><a href="#step2---%E5%AE%89%E8%A3%85tomcat">Step2 - 安装Tomcat</a></li></ul></li><li><a href="#%E4%BD%BF%E7%94%A8%E5%AE%9D%E5%A1%94">使用宝塔</a><ul><li><a href="#%E5%AE%89%E8%A3%85%E5%AE%9D%E5%A1%94">安装宝塔</a></li></ul></li></ul><hr><h1 id="自搭运行环境-Tomcat"><a href="#自搭运行环境-Tomcat" class="headerlink" title="自搭运行环境 - Tomcat"></a>自搭运行环境 - Tomcat</h1><h2 id="Step1-安装java环境"><a href="#Step1-安装java环境" class="headerlink" title="Step1 - 安装java环境"></a>Step1 - 安装java环境</h2><p><strong>1. 官网下载JDK <a href="https://www.oracle.com/java/technologies/downloads/">Java Downloads</a><br>  &amp;emsp;本次使用jdk-1.8.0_401</strong></p><p><strong>2. 解压jdk</strong></p><ul><li>在 &#x2F;usr&#x2F;lib 目录下创建 jvm 文件夹来保存 JDK 文件：<pre class="language-none"><code class="language-none">cd &#x2F;usr&#x2F;lib</code></pre><pre class="language-none"><code class="language-none">sudo mkdir jvm</code></pre></li><li>解压缩之前的 JDK 文件到上述目录中：<pre class="language-none"><code class="language-none">cd ~&#x2F;Downloads</code></pre><pre class="language-none"><code class="language-none">sudo tar -zxvf .&#x2F;jdk-8u401-linux-x64.tar.gz -C &#x2F;usr&#x2F;lib&#x2F;jvm</code></pre><strong>3. 配置JDK环境变量</strong></li><li>打开 ~&#x2F;.bashrc<pre class="language-none"><code class="language-none">sudo nano ~&#x2F;.bashrc</code></pre></li><li>添加以下内容  <pre class="language-none"><code class="language-none">export JAVA_HOME&#x3D;&#x2F;usr&#x2F;lib&#x2F;jvm&#x2F;jdk1.8.0_401export JRE_HOME&#x3D;$&#123;JAVA_HOME&#125;&#x2F;jreexport CLASSPATH&#x3D;.:$&#123;JAVA_HOME&#125;&#x2F;lib:$&#123;JRE_HOME&#125;&#x2F;libexport PATH&#x3D;$&#123;JAVA_HOME&#125;&#x2F;bin:$PATH</code></pre></li><li>退出nona编辑器：<pre class="language-none"><code class="language-none">Ctrl+X 保存，Y 确定保存，回车确定保存到文件</code></pre></li><li>使环境变量生效：<pre class="language-none"><code class="language-none">source ~&#x2F;.bashrc</code></pre><strong>4. 检验安装结果</strong>  <pre class="language-none"><code class="language-none">java -version</code></pre>出现与以下结果类似则说明安装成功<blockquote><p>hadoop@fzqs-computer:~$ java -version</br><br>java version “1.8.0_301”</br><br>Java(TM) SE Runtime Environment (build 1.8.0_301-b09)</br><br>Java HotSpot(TM) 64-Bit Server VM (build 25.301-b09, mixed mode)</p></blockquote></li></ul><h2 id="Step2-安装Tomcat"><a href="#Step2-安装Tomcat" class="headerlink" title="Step2 - 安装Tomcat"></a>Step2 - 安装Tomcat</h2><p><strong>1. 官网或仓库下载Tomcat <a href="https://tomcat.apache.org/">Apache Tomcat</a> | <a href="https://www-eu.apache.org/dist/tomcat/">wget仓库</a><br>   &amp;emsp;本次安装Tomcat-9.0.68</strong><br><strong>2. 解压缩之前下载的 Tomcat 文件到 &#x2F;opt 目录中：</strong></p>  <pre class="language-none"><code class="language-none">cd ~&#x2F;Downloads</code></pre>  <pre class="language-none"><code class="language-none">sudo tar -zxvf .&#x2F;apache-tomcat-9.0.68.tar.gz -C &#x2F;opt&#x2F;</code></pre><p><strong>3. 在 Tomcat bin目录下的 shell 脚本必须可执行：</strong></p>  <pre class="language-none"><code class="language-none">sudo sh -c &#39;chmod +x &#x2F;opt&#x2F;apache-tomcat-9.0.68&#x2F;bin&#x2F;*.sh&#39;</code></pre><p><strong>4. 创建 SystemD 单元文件</strong><br>  &amp;emsp;与使用 shell 脚本来启动和停止 Tomcat 服务器相比，我们将会将它作为服务来运行。</p><ul><li>打开文本编辑器，并且在 &#x2F;etc&#x2F;systemd&#x2F;system&#x2F; 目录下创建一个 tomcat.service 单元文件。<pre class="language-none"><code class="language-none">sudo nano &#x2F;etc&#x2F;systemd&#x2F;system&#x2F;tomcat.service</code></pre></li><li>粘贴下面的配置文件（用户名和用户组需改成自己的）  <pre class="language-none"><code class="language-none">[Unit]Description&#x3D;Tomcat 9 servlet containerAfter&#x3D;network.target[Service]Type&#x3D;forkingUser&#x3D;用户名Group&#x3D;用户组Environment&#x3D;&quot;JAVA_HOME&#x3D;&#x2F;usr&#x2F;lib&#x2F;jvm&#x2F;jdk1.8.0_401&quot;Environment&#x3D;&quot;JAVA_OPTS&#x3D;-Djava.security.egd&#x3D;file:&#x2F;&#x2F;&#x2F;dev&#x2F;urandom -Djava.awt.headless&#x3D;true&quot;Environment&#x3D;&quot;CATALINA_BASE&#x3D;&#x2F;opt&#x2F;apache-tomcat-9.0.68&quot;Environment&#x3D;&quot;CATALINA_HOME&#x3D;&#x2F;opt&#x2F;apache-tomcat-9.0.68&quot;Environment&#x3D;&quot;CATALINA_PID&#x3D;&#x2F;opt&#x2F;apache-tomcat-9.0.68&#x2F;temp&#x2F;tomcat.pid&quot;Environment&#x3D;&quot;CATALINA_OPTS&#x3D;-Xms512M -Xmx1024M -server -XX:+UseParallelGC&quot;ExecStart&#x3D;&#x2F;opt&#x2F;apache-tomcat-9.0.68&#x2F;bin&#x2F;startup.shExecStop&#x3D;&#x2F;opt&#x2F;apache-tomcat-9.0.68&#x2F;bin&#x2F;shutdown.sh[Install]WantedBy&#x3D;multi-user.target</code></pre></li><li>保存并且关闭文件，通知 systemd 一个新的单元文件存在：<pre class="language-none"><code class="language-none">sudo systemctl daemon-reload</code></pre></li><li>启用并且启动 Tomcat 服务：<pre class="language-none"><code class="language-none">sudo systemctl enable --now tomcat</code></pre></li><li>检查服务状态：<pre class="language-none"><code class="language-none">sudo systemctl status tomcat</code></pre></li><li>输出应该显示 Tomcat 服务器已经启用，并且运行了：<blockquote><p>tomcat.service - Tomcat 9 servlet container</br><br>Loaded: loaded (&#x2F;etc&#x2F;systemd&#x2F;system&#x2F;tomcat.service; enabled; vendor preset: enabled)</br><br>Active: active (running) since Mon 2020-05-25 17:58:37 UTC; 4s ago</br><br>Process: 5342 ExecStart&#x3D;&#x2F;opt&#x2F;tomcat&#x2F;latest&#x2F;bin&#x2F;startup.sh (code&#x3D;exited, status&#x3D;0&#x2F;SUCCESS)</br><br>Main PID: 5362 (java)</br><br>&amp;emsp;. . .</p></blockquote></li></ul><p><strong>5. 你可以 像其他 systemd 服务一样 启动，停止和重启 Tomcat：</strong><br>  <pre class="language-none"><code class="language-none">sudo systemctl start tomcat</code></pre><br>  <pre class="language-none"><code class="language-none">sudo systemctl stop tomcat</code></pre><br>  <pre class="language-none"><code class="language-none">sudo systemctl restart tomcat</code></pre><br><strong>6. Tomcat默认端口为 8080</strong></p><h1 id="使用宝塔"><a href="#使用宝塔" class="headerlink" title="使用宝塔"></a>使用宝塔</h1><h2 id="安装宝塔"><a href="#安装宝塔" class="headerlink" title="安装宝塔"></a>安装宝塔</h2><blockquote><p>安装脚本</p><pre class="language-none"><code class="language-none">wget -O install.sh http:&#x2F;&#x2F;download.bt.cn&#x2F;install&#x2F;install-ubuntu_6.0.sh &amp;&amp; sudo bash install.sh ed8484bec</code></pre></blockquote><p><strong>一路回车直到显示</strong></p><div align=center><img src="https://cdn.jsdelivr.net/gh/MTChaoyi/Blog-Hexo@main/source/_posts/.pic/2022-11-18-22-05-13.png" width=80%/ loading="lazy"></div>]]></content>
    
    
    <summary type="html">Ubuntu服务器配置各种网站</summary>
    
    
    
    <category term="一点小教程" scheme="https://hexo.mtchaoyi.top/categories/%E4%B8%80%E7%82%B9%E5%B0%8F%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="Ubuntu" scheme="https://hexo.mtchaoyi.top/tags/Ubuntu/"/>
    
    <category term="服务器" scheme="https://hexo.mtchaoyi.top/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
    <category term="网站" scheme="https://hexo.mtchaoyi.top/tags/%E7%BD%91%E7%AB%99/"/>
    
  </entry>
  
  <entry>
    <title>Markdown语法</title>
    <link href="https://hexo.mtchaoyi.top/2022/11/13/Markdown%E8%AF%AD%E6%B3%95/"/>
    <id>https://hexo.mtchaoyi.top/2022/11/13/Markdown%E8%AF%AD%E6%B3%95/</id>
    <published>2022-11-13T13:48:42.000Z</published>
    <updated>2023-02-05T11:50:17.060Z</updated>
    
    
    <summary type="html">Markdown基础语法</summary>
    
    
    
    <category term="一点小教程" scheme="https://hexo.mtchaoyi.top/categories/%E4%B8%80%E7%82%B9%E5%B0%8F%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="Markdown" scheme="https://hexo.mtchaoyi.top/tags/Markdown/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu服务器搭建</title>
    <link href="https://hexo.mtchaoyi.top/2022/11/13/Ubuntu%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%90%AD%E5%BB%BA/"/>
    <id>https://hexo.mtchaoyi.top/2022/11/13/Ubuntu%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%90%AD%E5%BB%BA/</id>
    <published>2022-11-12T20:39:57.000Z</published>
    <updated>2023-02-06T17:37:57.855Z</updated>
    
    <content type="html"><![CDATA[<hr><h1 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h1><ul><li><a href="#%E7%9B%AE%E5%BD%95">目录</a></li><li><a href="#ubuntu%E5%AE%89%E8%A3%85">Ubuntu安装</a><ul><li><a href="#step1---%E5%AE%89%E8%A3%85%E5%89%8D%E5%87%86%E5%A4%87">Step1 - 安装前准备</a></li><li><a href="#step2---%E5%86%99%E7%B3%BB%E7%BB%9F%E5%AE%89%E8%A3%85u%E7%9B%98">Step2 - 写系统安装U盘</a></li><li><a href="#step3---%E5%AE%89%E8%A3%85-ubuntu-server">Step3 - 安装 Ubuntu Server</a></li></ul></li><li><a href="#ubuntu%E5%9F%BA%E7%A1%80%E9%85%8D%E7%BD%AE">Ubuntu基础配置</a><ul><li><a href="#%E5%88%87%E6%8D%A2%E4%B8%AD%E6%96%87%E8%AF%AD%E8%A8%80">切换中文语言</a></li><li><a href="#%E7%A1%AC%E7%9B%98%E6%8C%82%E8%BD%BD">硬盘挂载</a></li><li><a href="#samba%E5%85%B1%E4%BA%AB%E6%8C%82%E8%BD%BD%E7%9A%84%E7%A1%AC%E7%9B%98">Samba共享挂载的硬盘</a></li><li><a href="#%E8%AE%BE%E7%BD%AE%E5%AE%9A%E6%97%B6%E9%87%8D%E5%90%AF">设置定时重启</a></li><li><a href="#%E6%B8%85%E7%90%86%E7%A1%AC%E7%9B%98%E7%A9%BA%E9%97%B4">清理硬盘空间</a></li><li><a href="#%E8%BF%9E%E6%8E%A5zerotier%E5%B1%80%E5%9F%9F%E7%BD%91">连接zerotier局域网</a></li><li><a href="#%E5%AE%89%E8%A3%85xrdp%E8%BF%9C%E7%A8%8B%E6%A1%8C%E9%9D%A2%E6%A1%8C%E9%9D%A2%E6%B2%A1%E5%95%A5%E7%94%A8">安装xrdp远程桌面(桌面没啥用)</a></li></ul></li></ul><hr><h1 id="Ubuntu安装"><a href="#Ubuntu安装" class="headerlink" title="Ubuntu安装"></a>Ubuntu安装</h1><h2 id="Step1-安装前准备"><a href="#Step1-安装前准备" class="headerlink" title="Step1 - 安装前准备"></a>Step1 - 安装前准备</h2><blockquote><ul><li>一台低功耗闲置主机</li><li>一个4G以上U盘</li><li>Ubuntu镜像文件 <a href="https://cn.ubuntu.com/download">官网</a>|<a href="https://mirrors.aliyun.com/ubuntu-releases/">阿里云</a></li><li><a href="https://rufus.ie/zh/">Rufus</a> 轻松创建USB启动盘</li></ul></blockquote><h2 id="Step2-写系统安装U盘"><a href="#Step2-写系统安装U盘" class="headerlink" title="Step2 - 写系统安装U盘"></a>Step2 - 写系统安装U盘</h2><p><strong>1. 打开Rufus</strong></p><div align=center><img src="https://cdn.jsdelivr.net/gh/MTChaoyi/Blog-Hexo@main/source/_posts/.pic/2022-11-13-21-57-50.png" width=50%/ loading="lazy"></div><p><strong>2. 将系统写入U盘</strong></p><div align=center><img src="https://cdn.jsdelivr.net/gh/MTChaoyi/Blog-Hexo@main/source/_posts/.pic/2022-11-13-22-06-04.png" width=50%/ loading="lazy"></div><h2 id="Step3-安装-Ubuntu-Server"><a href="#Step3-安装-Ubuntu-Server" class="headerlink" title="Step3 - 安装 Ubuntu Server"></a>Step3 - 安装 Ubuntu Server</h2><p><strong>1. 将U盘插入闲置主机</strong></p><p><strong>2. 开机，选择从U盘启动</strong></p><blockquote><p><strong>后续步骤用虚拟机演示</strong></p></blockquote><p><strong>3. 选择English</strong></p><div align=center><img src="https://cdn.jsdelivr.net/gh/MTChaoyi/Blog-Hexo@main/source/_posts/.pic/2022-11-13-22-36-06.png" width=80%/ loading="lazy"></div><p><strong>4. 选择键盘，默认即可</strong></p><div align=center><img src="https://cdn.jsdelivr.net/gh/MTChaoyi/Blog-Hexo@main/source/_posts/.pic/2022-11-13-22-36-56.png" width=80%/ loading="lazy"></div><p><strong>5. 选安装方式，默认即可</strong></p><div align=center><img src="https://cdn.jsdelivr.net/gh/MTChaoyi/Blog-Hexo@main/source/_posts/.pic/2022-11-13-22-38-18.png" width=80%/ loading="lazy"></div><p><strong>6. 选择网络</strong></p><div align=center><img src="https://cdn.jsdelivr.net/gh/MTChaoyi/Blog-Hexo@main/source/_posts/.pic/2022-11-13-22-40-29.png" width=80%/ loading="lazy"></div><p><strong>7. 选择代理，默认即可</strong></p><div align=center><img src="https://cdn.jsdelivr.net/gh/MTChaoyi/Blog-Hexo@main/source/_posts/.pic/2022-11-13-22-41-17.png" width=80%/ loading="lazy"></div><p><strong>8. 选择镜像仓库，推荐修改为国内镜像，例如阿里云的镜像</strong></p><pre class="language-none"><code class="language-none">http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;ubuntu</code></pre><div align=center><img src="https://cdn.jsdelivr.net/gh/MTChaoyi/Blog-Hexo@main/source/_posts/.pic/2022-11-13-23-02-27.png" width=80%/ loading="lazy"></div><p><strong>9. 磁盘分区方式</strong></p><div align=center><img src="https://cdn.jsdelivr.net/gh/MTChaoyi/Blog-Hexo@main/source/_posts/.pic/2022-11-13-23-06-39.png" width=80%/ loading="lazy"></div><ul><li>一般默认即可</li><li>如果选择手动分区<ul><li><p>500G及以上硬盘推荐配置</p><div align=center><img src="https://cdn.jsdelivr.net/gh/MTChaoyi/Blog-Hexo@main/source/_posts/.pic/2022-11-13-23-08-31.png" width=80%/ loading="lazy"></div></li><li><p>100G左右硬盘推荐配置</p><div align=center><img src="https://cdn.jsdelivr.net/gh/MTChaoyi/Blog-Hexo@main/source/_posts/.pic/2022-11-13-23-10-06.png" width=80%/ loading="lazy"></div></li></ul></li></ul><p><strong>10. 填写用户名密码等信息</strong></p><div align=center><img src="https://cdn.jsdelivr.net/gh/MTChaoyi/Blog-Hexo@main/source/_posts/.pic/2022-11-13-23-11-59.png" width=80%/ loading="lazy"></div><p><strong>11. 安装ssh，推荐安装</strong></p><div align=center><img src="https://cdn.jsdelivr.net/gh/MTChaoyi/Blog-Hexo@main/source/_posts/.pic/2022-11-13-23-15-18.png" width=80%/ loading="lazy"></div><p><strong>12. 等待安装完成</strong></p><div align=center><img src="https://cdn.jsdelivr.net/gh/MTChaoyi/Blog-Hexo@main/source/_posts/.pic/2022-11-13-23-16-12.png" width=80%/ loading="lazy"></div><blockquote><p>出现 Reboot Now 即安装完成，回车确认重启</br><br>如果卡在某条语句一直没反应可断网重新安装系统</p></blockquote><hr><h1 id="Ubuntu基础配置"><a href="#Ubuntu基础配置" class="headerlink" title="Ubuntu基础配置"></a>Ubuntu基础配置</h1><blockquote><p>ssh&#x2F;ftp软件：<a href="http://www.hostbuf.com/t/988.html">FinalShell</a></p></blockquote><h2 id="切换中文语言"><a href="#切换中文语言" class="headerlink" title="切换中文语言"></a>切换中文语言</h2><ul><li><p>区域设置</p>  <pre class="language-none"><code class="language-none">sudo dpkg-reconfigure locales</code></pre></li><li><p>向下翻,在靠近末尾的位置找到 <code>zh_CN.UTF-8 UTF-8</code> , 用 <code>空格键</code> 选中前面会添上 <code>*</code> ,然后回车键</p><div align=center><img src="https://cdn.jsdelivr.net/gh/MTChaoyi/Blog-Hexo@main/source/_posts/.pic/2022-11-19-00-59-37.png" width=80%/ loading="lazy"></div></li><li><p>再次选择 <code>zh_CN.UTF-8</code> , 然后回车完成设置</p><div align=center><img src="https://cdn.jsdelivr.net/gh/MTChaoyi/Blog-Hexo@main/source/_posts/.pic/2022-11-19-01-00-30.png" width=80%/ loading="lazy"></div><div align=center><img src="https://cdn.jsdelivr.net/gh/MTChaoyi/Blog-Hexo@main/source/_posts/.pic/2022-11-19-01-01-03.png" width=70%/ loading="lazy"></div></li><li><p>重启系统</p><pre class="language-none"><code class="language-none">sudo reboot</code></pre></li><li><p>重启后,如果有发现本该显示中文的地方出现了方块乱码,则还需要安装字体来支持中文</p><pre class="language-none"><code class="language-none">sudo apt install ttf-wqy-microhei ttf-wqy-zenhei xfonts-intl-chinese</code></pre></li></ul><h2 id="硬盘挂载"><a href="#硬盘挂载" class="headerlink" title="硬盘挂载"></a>硬盘挂载</h2><p><strong>1. 查看未挂载硬盘</strong></p><pre class="language-none"><code class="language-none">sudo fdisk -l</code></pre><div align=center><img src="https://cdn.jsdelivr.net/gh/MTChaoyi/Blog-Hexo@main/source/_posts/.pic/2022-12-04-15-05-14.png" width = 80%/ loading="lazy"></div><p><strong>2. 将磁盘挂载在某个地方</strong></p><ul><li><p><code>mount /dev/sdb1 需要挂载的路径</code>需要挂载的路径必须存在</p><div align=center><img src="https://cdn.jsdelivr.net/gh/MTChaoyi/Blog-Hexo@main/source/_posts/.pic/2022-12-04-15-07-33.png" width = 80%/ loading="lazy"></div></li><li><p>出现<code>Could not mount read-write, trying read-only</code>说明挂载读写失败，以只读挂载成功</p><ul><li>取消挂载<pre class="language-none"><code class="language-none">umount &#x2F;dev&#x2F;sdb1</code></pre></li><li>修复硬盘<pre class="language-none"><code class="language-none">sudo ntfsfix &#x2F;dev&#x2F;sdb1</code></pre><div align=center><img src="https://cdn.jsdelivr.net/gh/MTChaoyi/Blog-Hexo@main/source/_posts/.pic/2022-12-04-15-13-19.png" width = 80%/ loading="lazy"></div></li><li>重新挂载硬盘<pre class="language-none"><code class="language-none">sudo mount -t ntfs &#x2F;dev&#x2F;sdb1 &#x2F;home&#x2F;mtchaoyi&#x2F;sdb1</code></pre></li><li>查看挂载情况<pre class="language-none"><code class="language-none">mount</code></pre><div align=center><img src="https://cdn.jsdelivr.net/gh/MTChaoyi/Blog-Hexo@main/source/_posts/.pic/2022-12-04-15-16-12.png" width = 80%/ loading="lazy"></div>**3. 设置开机自动挂载**</li></ul></li><li><p>查看硬盘UUID</p><pre class="language-none"><code class="language-none">sudo blkid &#x2F;dev&#x2F;sdb1</code></pre><div align=center><img src="https://cdn.jsdelivr.net/gh/MTChaoyi/Blog-Hexo@main/source/_posts/.pic/2022-12-04-15-18-55.png" width = 80%/ loading="lazy"></div></li><li><p>修改fstab</p><pre class="language-none"><code class="language-none">sudo nano &#x2F;etc&#x2F;fstab</code></pre></li><li><p>在最后一行添加</p><pre class="language-none"><code class="language-none">UUID&#x3D;XXXX  挂载路径  ntfs  defaults 0  2</code></pre></li></ul><h2 id="Samba共享挂载的硬盘"><a href="#Samba共享挂载的硬盘" class="headerlink" title="Samba共享挂载的硬盘"></a>Samba共享挂载的硬盘</h2><ul><li><p>安装samba服务</p><pre class="language-none"><code class="language-none">sudo apt install samba</code></pre></li><li><p>samba配置</p><pre class="language-none"><code class="language-none">sudo vim &#x2F;etc&#x2F;samba&#x2F;smb.conf</code></pre></li><li><p>在smb.conf最后添加</p><pre class="language-none"><code class="language-none">[share]  path &#x3D; &#x2F;home&#x2F;mtchaoyi&#x2F;sda1  available &#x3D; yes  browseable &#x3D; yes  writable &#x3D; yes</code></pre><div align=center><img src="https://cdn.jsdelivr.net/gh/MTChaoyi/Blog-Hexo@main/source/_posts/.pic/2023-02-02-20-06-29.png" width = 80%/ loading="lazy"></div></li><li><p>创建使用该共享文件的账号</p><pre class="language-none"><code class="language-none">sudo smbpasswd -a mtchaoyi</code></pre></li><li><p>重启samba服务</p><pre class="language-none"><code class="language-none">sudo service smbd restart</code></pre></li></ul><h2 id="设置定时重启"><a href="#设置定时重启" class="headerlink" title="设置定时重启"></a>设置定时重启</h2><ul><li>编辑crontab<pre class="language-none"><code class="language-none">crontab -e</code></pre></li><li>添加定时任务，以下的意思是：0分3点执行重启。<pre class="language-none"><code class="language-none">0 3 * * * &#x2F;sbin&#x2F;reboot</code></pre><code>m h day mon week command</code><table><thead><tr><th align="center">参数</th><th align="center">意义</th><th align="center">取值范围</th></tr></thead><tbody><tr><td align="center">m</td><td align="center">分钟</td><td align="center">0-59</td></tr><tr><td align="center">h</td><td align="center">小时</td><td align="center">0-23</td></tr><tr><td align="center">day</td><td align="center">天</td><td align="center">1-31</td></tr><tr><td align="center">mon</td><td align="center">月</td><td align="center">1-12</td></tr><tr><td align="center">week</td><td align="center">星期</td><td align="center">0-6 ，0表示星期天</td></tr><tr><td align="center">command</td><td align="center">要执行的命令</td><td align="center">——</td></tr></tbody></table></li><li>重启服务<pre class="language-none"><code class="language-none">sudo service cron restart</code></pre></li><li>查看所有定时任务<pre class="language-none"><code class="language-none">crontab -l</code></pre></li></ul><h2 id="清理硬盘空间"><a href="#清理硬盘空间" class="headerlink" title="清理硬盘空间"></a>清理硬盘空间</h2><ul><li><p>查看硬盘空间占用情况</p><pre class="language-none"><code class="language-none">df -h</code></pre><div align=center><img src="https://cdn.jsdelivr.net/gh/MTChaoyi/Blog-Hexo@main/source/_posts/.pic/2023-02-05-14-09-13.png" width = 80%/ loading="lazy"></div></li><li><p>跳转到需要清理空间的挂载点，查看最大占用的一级目录</p><pre class="language-none"><code class="language-none">sudo du --max-depth&#x3D;1 -h</code></pre></li></ul><h2 id="连接zerotier局域网"><a href="#连接zerotier局域网" class="headerlink" title="连接zerotier局域网"></a>连接zerotier局域网</h2><ul><li>安装zerotier<pre class="language-none"><code class="language-none">curl -s https:&#x2F;&#x2F;install.zerotier.com | sudo bash</code></pre></li><li>加入zerotier局域网<pre class="language-none"><code class="language-none">sudo zerotier-cli join 你的network ID</code></pre></li><li>登入zerotier官网，进入你的局域网，在Ubuntu前面打勾，授权<div align=center><img src="https://cdn.jsdelivr.net/gh/MTChaoyi/Blog-Hexo@main/source/_posts/.pic/2023-02-02-20-14-32.png" width = 80%/ loading="lazy"></div></li></ul><h2 id="安装xrdp远程桌面-桌面没啥用"><a href="#安装xrdp远程桌面-桌面没啥用" class="headerlink" title="安装xrdp远程桌面(桌面没啥用)"></a>安装xrdp远程桌面(桌面没啥用)</h2><ul><li>运行下面任何一个命令去安装你选择的桌面环境<ul><li>安装 Gnome<pre class="language-none"><code class="language-none">sudo apt updatesudo apt install ubuntu-desktop</code></pre></li><li>安装 Xfce<pre class="language-none"><code class="language-none">sudo apt updatesudo apt install xubuntu-desktop</code></pre></li></ul></li><li>安装 Xrdp<pre class="language-none"><code class="language-none">sudo apt install xrdp</code></pre></li><li>将用户添加到ssl-cert用户组<pre class="language-none"><code class="language-none">sudo adduser mtchaoyi ssl-cert</code></pre></li><li>重启 Xrdp 服务，使得修改生效<pre class="language-none"><code class="language-none">sudo systemctl restart xrdp</code></pre></li></ul>]]></content>
    
    
    <summary type="html">自用的Ubuntu服务器搭建过程</summary>
    
    
    
    <category term="一点小教程" scheme="https://hexo.mtchaoyi.top/categories/%E4%B8%80%E7%82%B9%E5%B0%8F%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="Ubuntu" scheme="https://hexo.mtchaoyi.top/tags/Ubuntu/"/>
    
    <category term="服务器" scheme="https://hexo.mtchaoyi.top/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>华为手机安装谷歌</title>
    <link href="https://hexo.mtchaoyi.top/2022/04/09/%E5%8D%8E%E4%B8%BA%E6%89%8B%E6%9C%BA%E5%AE%89%E8%A3%85%E8%B0%B7%E6%AD%8C/"/>
    <id>https://hexo.mtchaoyi.top/2022/04/09/%E5%8D%8E%E4%B8%BA%E6%89%8B%E6%9C%BA%E5%AE%89%E8%A3%85%E8%B0%B7%E6%AD%8C/</id>
    <published>2022-04-09T15:48:30.000Z</published>
    <updated>2022-11-18T18:31:04.435Z</updated>
    
    <content type="html"><![CDATA[<hr><h1 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h1><ul><li><a href="#%E7%9B%AE%E5%BD%95">目录</a></li><li><a href="#%E7%AC%AC%E4%B8%80%E6%AD%A5">第一步</a><ul><li><a href="#%E8%B0%B7%E6%AD%8C%E6%9C%8D%E5%8A%A1%E5%8A%A9%E6%89%8B">谷歌服务助手</a></li></ul></li><li><a href="#%E7%AC%AC%E4%BA%8C%E6%AD%A5">第二步</a><ul><li><a href="#%E5%90%8E%E9%9D%A2%E9%9C%80%E5%85%A8%E7%A8%8B%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91%E4%B8%94%E5%BF%85%E9%A1%BB%E6%8C%89%E9%A1%BA%E5%BA%8F%E6%93%8D%E4%BD%9C">后面需全程科学上网且必须按顺序操作！</a></li><li><a href="#%E5%88%9D%E5%A7%8B%E5%AE%89%E8%A3%85%E6%AD%A5%E9%AA%A4">初始安装步骤</a></li><li><a href="#%E8%A7%A3%E5%86%B3%E8%AE%BE%E5%A4%87%E6%9C%AA%E8%8E%B7%E5%BE%97play%E4%BF%9D%E6%8A%A4%E6%9C%BA%E5%88%B6%E8%AE%A4%E8%AF%81%E9%80%9A%E7%9F%A5%E9%97%AE%E9%A2%98">解决“设备未获得play保护机制认证”通知问题</a></li></ul></li></ul><hr><h1 id="第一步"><a href="#第一步" class="headerlink" title="第一步"></a>第一步</h1><h2 id="谷歌服务助手"><a href="#谷歌服务助手" class="headerlink" title="谷歌服务助手"></a>谷歌服务助手</h2><ul><li>安装旧版“备份”<ol><li>卸载原装“备份”<blockquote><p>adb uninstall com.huawei.localBackup</p></blockquote></li><li>安装提供的“备份”<blockquote><p>adb install 备份.apk</p></blockquote></li></ol></li><li>修改系统时间为 2019年6月</li><li>将解压 Huawei.zip 得到的 backup 文件夹移到手机根目录下的 Huawei 文件夹内</li><li>设置内打开“备份与恢复”，点击右上角选择“从内部存储恢复”</li><li>恢复备份的密码显示在密码提示上</li><li>打开谷歌服务助手，打开全部权限后选择“激活”，看到安装框架界面时退出</li><li>将系统时间调回自动</li></ul><h1 id="第二步"><a href="#第二步" class="headerlink" title="第二步"></a>第二步</h1><h2 id="后面需全程科学上网且必须按顺序操作！"><a href="#后面需全程科学上网且必须按顺序操作！" class="headerlink" title="后面需全程科学上网且必须按顺序操作！"></a>后面需全程科学上网且必须按顺序操作！</h2><h2 id="初始安装步骤"><a href="#初始安装步骤" class="headerlink" title="初始安装步骤"></a>初始安装步骤</h2><ul><li>安装 0.apk (HW安装器)<ul><li>打开HW安装器</li><li>点击 account 登录谷歌账号</li><li>软件可能会闪退一次，打开继续登录即可</li></ul></li><li>安装 1.apk (com.google…)</li><li>安装 2.apk (Google通讯录同步)</li><li>安装 4.apk (Google Play 商店)</li><li>安装 5.apk (SharedLibrary)</li><li>安装 6.apk (Google 账户管理程序)</li><li>安装 7.apk (Google服务框架)</li><li>卸载 0.apk (HW安装器)</li><li>安装 3.apk (Google Play 服务)</li></ul><h2 id="解决“设备未获得play保护机制认证”通知问题"><a href="#解决“设备未获得play保护机制认证”通知问题" class="headerlink" title="解决“设备未获得play保护机制认证”通知问题"></a>解决“设备未获得play保护机制认证”通知问题</h2><ul><li>打开 Google Play 商店<ul><li>第一次打开一般会显示“从服务器检索信息时出错”</li><li>点击重试直到商店页面正常显示</li></ul></li><li>在商店搜索安装 Device ID (紫色图标的版本)</li><li>打开 Device ID 可以看到 Google Service Framework (GSF) 正常显示</li><li>在 设置-&gt;应用和服务-&gt;应用管理 中卸载 Google Play 服务</li><li>安装 8.apk (Google Play 服务)</li><li>在 设置-&gt;应用和服务-&gt;应用管理 中选择 Google服务框架<ul><li>强行停止 Google服务框架</li><li>-&gt;存储-&gt;删除数据-&gt;存储-&gt;删除数据-&gt;…</li><li>重复删除数据直到 Device ID 中 GSF 显示 Unknown</li><li>一般重复三次就行</li></ul></li><li>卸载 Google服务框架</li><li>再次安装 7.apk (Google服务框架)</li><li>清理后台并打开 Google Play 商店<ul><li>这时正常情况下不会出现“设备未获得play保护机制认证”的通知</li><li>可以随便安装个软件测试</li><li>百分百确认不会出现“设备未获得play保护机制认证”才可进行下一步<blockquote><p>如果还是出现“设备未获得play保护机制认证”，则卸载第二步中安装的全部软件，重启设备后重新进行第二步</p></blockquote></li></ul></li><li>打开 Device ID 检查 GSF 是否正常显示<ul><li>重复打开关闭 Device ID 来刷新数据</li><li>重复四次五次左右还是显示 Unknown 就重启设备<blockquote><p>重启后还是显示 Unknown 则卸载 Google Play 服务 装回 3.apk (Google Play 服务) 并卸载重装 Google服务框架，重新进行《解决“设备未获得play保护机制认证”通知问题》直到这一步正常或从头开始</p></blockquote></li></ul></li><li>确认 Device ID 中 GSF 正常显示后卸载 Google Play 服务 安装 9.apk (Google Play 服务)</li><li>清理后台并打开 Google Play 商店 确认不会出现“设备未获得play保护机制认证”通知且可以正常安装软件则谷歌安装成功</li></ul>]]></content>
    
    
    <summary type="html">华为手机安装谷歌</summary>
    
    
    
    <category term="一点小教程" scheme="https://hexo.mtchaoyi.top/categories/%E4%B8%80%E7%82%B9%E5%B0%8F%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="华为" scheme="https://hexo.mtchaoyi.top/tags/%E5%8D%8E%E4%B8%BA/"/>
    
    <category term="谷歌" scheme="https://hexo.mtchaoyi.top/tags/%E8%B0%B7%E6%AD%8C/"/>
    
  </entry>
  
  <entry>
    <title>Office激活</title>
    <link href="https://hexo.mtchaoyi.top/2022/04/06/Office%E6%BF%80%E6%B4%BB/"/>
    <id>https://hexo.mtchaoyi.top/2022/04/06/Office%E6%BF%80%E6%B4%BB/</id>
    <published>2022-04-06T02:18:00.000Z</published>
    <updated>2022-11-18T18:32:29.507Z</updated>
    
    <content type="html"><![CDATA[<hr><h1 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h1><ul><li><a href="#%E7%9B%AE%E5%BD%95">目录</a></li><li><a href="#%E5%BC%80%E5%8F%91%E4%BA%BA%E5%91%98%E8%B4%A6%E6%88%B7%E6%B3%A8%E5%86%8C">开发人员账户注册</a></li></ul><hr><h1 id="开发人员账户注册"><a href="#开发人员账户注册" class="headerlink" title="开发人员账户注册"></a>开发人员账户注册</h1><p><a href="https://developer.microsoft.com/zh-cn/microsoft-365/profile">https://developer.microsoft.com/zh-cn/microsoft-365/profile</a></p>]]></content>
    
    
    <summary type="html">Office365免费激活方法</summary>
    
    
    
    <category term="一点小教程" scheme="https://hexo.mtchaoyi.top/categories/%E4%B8%80%E7%82%B9%E5%B0%8F%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="Office" scheme="https://hexo.mtchaoyi.top/tags/Office/"/>
    
    <category term="激活" scheme="https://hexo.mtchaoyi.top/tags/%E6%BF%80%E6%B4%BB/"/>
    
  </entry>
  
  <entry>
    <title>x-ui搭建v2ray</title>
    <link href="https://hexo.mtchaoyi.top/2022/03/17/x-ui%E6%90%AD%E5%BB%BAv2ray/"/>
    <id>https://hexo.mtchaoyi.top/2022/03/17/x-ui%E6%90%AD%E5%BB%BAv2ray/</id>
    <published>2022-03-17T15:56:55.000Z</published>
    <updated>2022-11-12T20:39:09.066Z</updated>
    
    <content type="html"><![CDATA[<h1 id="x-ui搭建v2ary"><a href="#x-ui搭建v2ary" class="headerlink" title="x-ui搭建v2ary"></a>x-ui搭建v2ary</h1><blockquote><p>@vaxilu&#x2F;x-ui <a href="https://github.com/vaxilu/x-ui">https://github.com/vaxilu/x-ui</a></p></blockquote><h1 id="一键部署代码"><a href="#一键部署代码" class="headerlink" title="一键部署代码"></a>一键部署代码</h1><p><code>bash &lt;(curl -Ls https://raw.githubusercontent.com/vaxilu/x-ui/master/install.sh)</code></p><h1 id="功能介绍"><a href="#功能介绍" class="headerlink" title="功能介绍"></a>功能介绍</h1><ul><li>系统状态监控</li><li>支持多用户多协议，网页可视化操作</li><li>支持的协议：vmess、vless、trojan、shadowsocks、dokodemo-door、socks、http</li><li>支持配置更多传输配置</li><li>流量统计，限制流量，限制到期时间</li><li>可自定义 xray 配置模板</li><li>支持 https 访问面板（自备域名 + ssl 证书）</li><li>更多高级配置项，详见面板</li></ul><h1 id="CentOS-7自带防火墙开放端口"><a href="#CentOS-7自带防火墙开放端口" class="headerlink" title="CentOS 7自带防火墙开放端口"></a>CentOS 7自带防火墙开放端口</h1><ul><li><p>查看firewall的状态<br><br><code>firewall-cmd --state</code></p></li><li><p>开放端口<br><br><code>firewall-cmd --permanent --add-port=XXX/tcp</code></p></li><li><p>重启防火墙(修改配置后要重启防火墙)<br><br><code>firewall-cmd --reload</code></p></li></ul>]]></content>
    
    
    <summary type="html">搭建x-ui框架的v2ary教程</summary>
    
    
    
    <category term="一点小教程" scheme="https://hexo.mtchaoyi.top/categories/%E4%B8%80%E7%82%B9%E5%B0%8F%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="x-ui" scheme="https://hexo.mtchaoyi.top/tags/x-ui/"/>
    
    <category term="v2ary" scheme="https://hexo.mtchaoyi.top/tags/v2ary/"/>
    
    <category term="VPN" scheme="https://hexo.mtchaoyi.top/tags/VPN/"/>
    
  </entry>
  
  <entry>
    <title>hexo-github搭建博客</title>
    <link href="https://hexo.mtchaoyi.top/2022/03/17/hexo-github%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/"/>
    <id>https://hexo.mtchaoyi.top/2022/03/17/hexo-github%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/</id>
    <published>2022-03-17T15:42:34.000Z</published>
    <updated>2023-02-06T13:08:22.048Z</updated>
    
    <content type="html"><![CDATA[<hr><h1 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h1><ul><li><a href="#%E7%9B%AE%E5%BD%95">目录</a></li><li><a href="#%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA">环境搭建</a></li><li><a href="#%E8%BF%9E%E6%8E%A5-github">连接 Github</a></li><li><a href="#%E5%88%9B%E5%BB%BA-github-pages-%E4%BB%93%E5%BA%93">创建 Github Pages 仓库</a></li><li><a href="#%E6%9C%AC%E5%9C%B0%E5%AE%89%E8%A3%85-hexo-%E5%8D%9A%E5%AE%A2%E7%A8%8B%E5%BA%8F">本地安装 Hexo 博客程序</a><ul><li><a href="#%E5%AE%89%E8%A3%85-hexo">安装 Hexo</a></li><li><a href="#hexo-%E5%88%9D%E5%A7%8B%E5%8C%96%E5%92%8C%E6%9C%AC%E5%9C%B0%E9%A2%84%E8%A7%88">Hexo 初始化和本地预览</a></li></ul></li><li><a href="#%E9%83%A8%E7%BD%B2-hexo-%E5%88%B0-github-pages">部署 Hexo 到 GitHub Pages</a></li><li><a href="#%E7%BB%91%E5%AE%9A%E5%9F%9F%E5%90%8D%E5%8F%AF%E9%80%89">绑定域名（可选）</a><ul><li><a href="#%E5%9F%9F%E5%90%8D%E6%B3%A8%E5%86%8C%E5%92%8C%E8%A7%A3%E6%9E%90">域名注册和解析</a></li><li><a href="#%E7%BB%91%E5%AE%9A%E5%9F%9F%E5%90%8D%E5%88%B0-hexo-%E5%8D%9A%E5%AE%A2">绑定域名到 Hexo 博客</a></li></ul></li><li><a href="#%E5%BC%80%E5%A7%8B%E4%BD%BF%E7%94%A8">开始使用</a><ul><li><a href="#%E5%8F%91%E5%B8%83%E6%96%87%E7%AB%A0">发布文章</a></li><li><a href="#%E7%BD%91%E7%AB%99%E8%AE%BE%E7%BD%AE">网站设置</a></li><li><a href="#%E6%9B%B4%E6%8D%A2%E4%B8%BB%E9%A2%98">更换主题</a></li><li><a href="#%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4">常用命令</a></li></ul></li><li><a href="#%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98">常见问题</a></li></ul><hr><h1 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h1><p>Hexo 基于 Node.js，搭建过程中还需要使用 npm（Node.js 已带） 和 git，因此先搭建本地操作环境，安装 Node.js 和 Git。</p><ul><li>Node.js：<a href="https://nodejs.org/zh-cn">https://nodejs.org/zh-cn</a></li><li>Git：<a href="https://git-scm.com/downloads">https://git-scm.com/downloads</a></li></ul><p>下载 Node.js 和 Git 程序并安装，一路点 “下一步” 按默认配置完成安装。</p><p>安装完成后, <code>Win+R</code> 输入 <code>cmd</code> 并打开，依次输入 <code>node -v</code>、<code>npm -v</code> 和 <code>git --version</code> 并回车，如下图出现程序版本号即可。</p><div align=center><img src="https://cdn.jsdelivr.net/gh/MTChaoyi/Blog-Hexo@main/source/_posts/.pic/2022-11-19-01-53-43.png" width = 60%/ loading="lazy"></div><h1 id="连接-Github"><a href="#连接-Github" class="headerlink" title="连接 Github"></a>连接 Github</h1><blockquote><p><strong>使用邮箱注册 <a href="https://github.com/">GitHub</a> 账户，选择免费账户（Free），并完成邮件验证。</strong></p></blockquote><ul><li><p>打开 Git Bash，设置用户名和邮箱：</p><pre class="language-none"><code class="language-none">git config --global user.name &quot;GitHub 用户名&quot;</code></pre><pre class="language-none"><code class="language-none">git config --global user.email &quot;GitHub 邮箱&quot;</code></pre></li><li><p>创建 SSH 密匙：</p><pre class="language-none"><code class="language-none">ssh-keygen -t rsa -C &quot;GitHub 邮箱&quot;</code></pre><p>然后一路回车。</p></li><li><p>添加密匙：<br><br>进入 [C:\Users\用户名.ssh] 目录（要勾选显示“隐藏的项目”），用记事本打开公钥 id_rsa.pub 文件并复制里面的内容。</p></li><li><p>登陆 GitHub ，进入 Settings 页面，选择左边栏的 SSH and GPG keys，点击 New SSH key。</p></li><li><p>Title 随便取个名字，粘贴复制的 id_rsa.pub 内容到 Key 中，点击 Add SSH key 完成添加。</p></li><li><p>验证连接：<br><br>打开 Git Bash，输入 <code>ssh -T git@github.com</code> 出现 <em>Are you sure……</em>，输入 <code>yes</code> 回车确认。</p><div align=center><img src="https://cdn.jsdelivr.net/gh/MTChaoyi/Blog-Hexo@main/source/_posts/.pic/2022-11-19-02-17-03.png" width = 80%/ loading="lazy"></div>显示 *Hi xxx! You've successfully……* 即连接成功。</li></ul><h1 id="创建-Github-Pages-仓库"><a href="#创建-Github-Pages-仓库" class="headerlink" title="创建 Github Pages 仓库"></a>创建 Github Pages 仓库</h1><p>GitHub 主页右上角加号 -&gt; New repository：</p><p>Repository name 中输入</p><pre class="language-none"><code class="language-none">用户名.github.io</code></pre><p>Description 选填<br><br>勾选 <em>Add a README file</em><br><br>填好后点击 Create repository 创建。<br><br><strong>创建后默认自动启用 HTTPS，博客地址为: <code>https://用户名.github.io</code></strong></p><h1 id="本地安装-Hexo-博客程序"><a href="#本地安装-Hexo-博客程序" class="headerlink" title="本地安装 Hexo 博客程序"></a>本地安装 Hexo 博客程序</h1><p>新建一个文件夹用来存放 Hexo 的程序文件，如 Hexo-Blog。打开该文件夹，右键 -&gt; Git Bash Here。</p><h2 id="安装-Hexo"><a href="#安装-Hexo" class="headerlink" title="安装 Hexo"></a>安装 Hexo</h2><p>使用 npm 一键安装 Hexo 博客程序：<br></p><pre class="language-none"><code class="language-none">npm install -g hexo-cli</code></pre><p>Mac 用户需要管理员权限（sudo），运行这条命令：<br></p><pre class="language-none"><code class="language-none">sudo npm install -g hexo-cli</code></pre><p>安装时间有点久，界面也没任何反应，<strong>耐心等待</strong></p><h2 id="Hexo-初始化和本地预览"><a href="#Hexo-初始化和本地预览" class="headerlink" title="Hexo 初始化和本地预览"></a>Hexo 初始化和本地预览</h2><p>初始化并安装所需组件：<br></p><pre class="language-none"><code class="language-none">hexo init    # 初始化</code></pre><pre class="language-none"><code class="language-none">npm install   # 安装组件</code></pre><p>完成后依次输入下面命令，启动本地服务器进行预览：<br></p><pre class="language-none"><code class="language-none">hexo g    # 生成页面</code></pre><pre class="language-none"><code class="language-none">hexo s    # 启动预览</code></pre><p>访问 <a href="http://localhost:4000/">http://localhost:4000</a>, 出现 Hexo 默认页面，本地博客安装成功！</p><div align=center><img src="https://cdn.jsdelivr.net/gh/MTChaoyi/Blog-Hexo@main/source/_posts/.pic/2022-11-19-01-54-11.png" width = 80%/ loading="lazy"></div><p><strong>Tips：</strong> 如果出现页面加载不出来，可能是端口被占用了。<em>Ctrl+C</em> 关闭服务器，运行 <code>hexo server -p 5000</code> 更改端口号后重试。<br><br></p><p><strong>Hexo 博客文件夹目录结构如下：</strong></p><div align=center><img src="https://cdn.jsdelivr.net/gh/MTChaoyi/Blog-Hexo@main/source/_posts/.pic/2022-11-19-01-55-05.png" width = 80%/ loading="lazy"></div><h1 id="部署-Hexo-到-GitHub-Pages"><a href="#部署-Hexo-到-GitHub-Pages" class="headerlink" title="部署 Hexo 到 GitHub Pages"></a>部署 Hexo 到 GitHub Pages</h1><p>本地博客测试成功后，就是上传到 GitHub 进行部署，使其能够在网络上访问。</p><ul><li><p>首先安装 hexo-deployer-git：</p><pre class="language-none"><code class="language-none">npm install hexo-deployer-git --save</code></pre></li><li><p>然后修改 <code>_config.yml</code> 文件末尾的 Deployment 部分，修改成如下：</p><pre class="language-none"><code class="language-none">deploy:  type: git  repository: git@github.com:用户名&#x2F;用户名.github.io.git  branch: main</code></pre></li><li><p>完成后运行 hexo d 将网站上传部署到 GitHub Pages。</p></li></ul><p>这时访问我们的 GitHub 域名 <code>https://用户名.github.io</code> 就可以看到 Hexo 网站了</p><h1 id="绑定域名（可选）"><a href="#绑定域名（可选）" class="headerlink" title="绑定域名（可选）"></a>绑定域名（可选）</h1><p>博客搭建完成使用的是 GitHub 的子域名<code>用户名.github.io</code>，我们可以为 Hexo 博客绑定自己的域名替换 GitHub 域名，更加个性化和专业，也利于 SEO。</p><h2 id="域名注册和解析"><a href="#域名注册和解析" class="headerlink" title="域名注册和解析"></a>域名注册和解析</h2><p>在 DNS 设置部分添加 CNAME 记录将 <code>www</code> 域名解析指向 <code>用户名.github.io</code>。</p><h2 id="绑定域名到-Hexo-博客"><a href="#绑定域名到-Hexo-博客" class="headerlink" title="绑定域名到 Hexo 博客"></a>绑定域名到 Hexo 博客</h2><ul><li>进入本地博客文件夹的 source 目录，打开记事本，里面输入自己的域名，如 <code>www.xxx.com</code>，保存名称为 “CNAME”，格式为 “所有文件”（无 .txt 后缀）。</li><li>清除缓存等文件并重新发布网站：<pre class="language-none"><code class="language-none">hexo clean    # 清除缓存文件等</code></pre><pre class="language-none"><code class="language-none">hexo d    #重新部署 Hexo 到 GitHub Pages</code></pre>等待十分钟左右就可以使用自己的域名访问 Hexo 博客了。</li></ul><h1 id="开始使用"><a href="#开始使用" class="headerlink" title="开始使用"></a>开始使用</h1><h2 id="发布文章"><a href="#发布文章" class="headerlink" title="发布文章"></a>发布文章</h2><p>进入博客所在目录，右键打开 Git Bash Here，创建博文：</p><pre class="language-none"><code class="language-none">hexo new &quot;My New Post&quot;</code></pre><p>然后 source 文件夹中会出现一个 <em>My New Post.md</em> 文件，就可以使用 Markdown 编辑器在该文件中撰写文章了。<br><br>写完后运行下面代码将文章渲染并部署到 GitHub Pages 上完成发布。以后每次发布文章都是这两条命令。</p><pre class="language-none"><code class="language-none">hexo g    # 生成页面</code></pre><pre class="language-none"><code class="language-none">hexo d    # 部署发布</code></pre><p>也可以不使用命令自己创建 .md 文件，只需在文件开头手动加入如下格式 Front-matter 即可，写完后运行 <code>hexo g</code> 和 <code>hexo d</code> 发布。</p><pre class="language-none"><code class="language-none">---title: Hello World # 标题date: 2019&#x2F;3&#x2F;26 hh:mm:ss # 时间categories: # 分类- Diarytags: # 标签- PS3- Games---摘要&lt;!--more--&gt;正文</code></pre><p><strong>注意：冒号后要加一个空格！</strong></p><h2 id="网站设置"><a href="#网站设置" class="headerlink" title="网站设置"></a>网站设置</h2><p>包括网站名称、描述、作者、链接样式等，全部在网站目录下的 <code>_config.yml</code> 文件中，参考 <a href="https://hexo.io/zh-cn/docs/configuration">官方文档</a> 按需要编辑。</p><h2 id="更换主题"><a href="#更换主题" class="headerlink" title="更换主题"></a>更换主题</h2><p>在 <a href="https://hexo.io/themes/">Themes | Hexo</a> 选择一个喜欢的主题，比如 NexT，进入网站目录打开 Git Bash Here 下载主题：<br></p><pre class="language-none"><code class="language-none">git clone https:&#x2F;&#x2F;github.com&#x2F;iissnan&#x2F;hexo-theme-next themes&#x2F;next</code></pre><p>然后修改 <code>_config.yml</code> 中的 theme 为新主题名称 next，发布。（有的主题需要将 <code>_config.yml</code> 替换为主题自带的，参考主题说明。）</p><h2 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h2><pre class="language-none"><code class="language-none">hexo new &quot;name&quot;       # 新建文章hexo new page &quot;name&quot;  # 新建页面hexo g                # 生成页面hexo d                # 部署hexo g -d             # 生成页面并部署hexo s                # 本地预览hexo clean            # 清除缓存和已生成的静态文件hexo help             # 帮助</code></pre><h1 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h1><ul><li><p>1.Hexo 设置显示文章摘要，首页不显示全文<br><br>Hexo 主页文章列表默认会显示文章全文，浏览时很不方便，可以在文章中插入 <code>&lt;!--more--&gt;</code> 进行分段。<br><br>该代码前面的内容会作为摘要显示，而后面的内容会替换为 <em>Read More</em> 隐藏起来。</p></li><li><p>2.设置网站图标<br><br>进入 themes&#x2F;主题 文件夹，打开 <code>_config.yml</code> 配置文件，找到 favicon 修改，一般格式为：favicon: 图标地址。（不同主题可能略有差别）</p></li><li><p>3.修改并部署后没有效果<br><br>使用 hexo clean 清理后重新部署。</p></li><li><p>4.开启 HTTPS 后访问网站显示连接不安全？<br><br>证书还未部署生效，等待一会儿，清除浏览器缓存再试。</p></li><li><p>5.Mac 安装 Hexo 报错无法安装<br><br>Mac 用户需要管理员权限运行，使用 sudo npm install -g hexo-cli 命令安装。</p></li><li><p>6.npm 下载速度慢，甚至完全没反应<br><br>使用 npm 安装程序等待很久也没反应，或者下载速度很慢，可以更换 npm 源为国内 npm 镜像。<br><br>临时更换方法：在 npm 安装命令后面加上：<br></p><pre class="language-none"><code class="language-none">--registry https:&#x2F;&#x2F;registry.npm.taobao.org</code></pre></li></ul><hr><p>参考资料：知乎 <a href="https://www.zhihu.com/people/crystal-33-50">@crystal</a><br><a href="https://zhuanlan.zhihu.com/p/60578464#:~:text=%E4%BD%BF%E7%94%A8%20Hexo%2BGitHub%20%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%85%8D%E8%B4%B9%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B%EF%BC%88%E5%B0%8F%E7%99%BD%E5%90%91%EF%BC%89%201%20%E5%87%86%E5%A4%87%202%20%E8%BF%9E%E6%8E%A5%20Github....,Hexo%20%E5%88%B0%20GitHub%20Pages%206%20%E7%BB%91%E5%AE%9A%E5%9F%9F%E5%90%8D%EF%BC%88%E5%8F%AF%E9%80%89%EF%BC%89....%207%20%E5%BC%80%E5%A7%8B%E4%BD%BF%E7%94%A8">使用 Hexo+GitHub 搭建个人免费博客教程（小白向）</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;hr&gt;
&lt;h1 id=&quot;目录&quot;&gt;&lt;a href=&quot;#目录&quot; class=&quot;headerlink&quot; title=&quot;目录&quot;&gt;&lt;/a&gt;目录&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#%E7%9B%AE%E5%BD%95&quot;&gt;目录&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#%E7</summary>
      
    
    
    
    <category term="一点小教程" scheme="https://hexo.mtchaoyi.top/categories/%E4%B8%80%E7%82%B9%E5%B0%8F%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="教程" scheme="https://hexo.mtchaoyi.top/tags/%E6%95%99%E7%A8%8B/"/>
    
    <category term="Hexo" scheme="https://hexo.mtchaoyi.top/tags/Hexo/"/>
    
    <category term="分享" scheme="https://hexo.mtchaoyi.top/tags/%E5%88%86%E4%BA%AB/"/>
    
  </entry>
  
</feed>
